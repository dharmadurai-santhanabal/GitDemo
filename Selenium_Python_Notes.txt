Python:

Comments:

	We can use # in front of the line to comment including the code.

	For Multiple lines, you can either use # for each line or you can use triple quotes at the either end of the strings...

	#comment1
	#comment2
	#comment3

	or 

	"""
	comment1
	comment2
	comment3
	"""


variables:

	Variables names 	
		- should be started with alpha-numeric or underscore
		- should be started with either lower or uppercase.
		- variable names are case sensitive.
		- should not be started with numbers.
		- should not be used any reserved keywords.
	
	No need of mentioning the datatype of variable it belongs.
	
		x = 3
		y = 1.4
		z = 'DDDDD' or z = "DDD
		
	if you need to print the datatype of the variable , you can use the type() function.
	
		a = "Jack Smith"
		
		print(type(a))
		
	Casting = Even we can change the datatype of variable after the variable declaration.
	
		b = 1	# Intiger
		
		if you want to change the datatype of int to float, we can do as follows, 
		
			b = float(1)
			
	if the variable name as complex name with multiple words, we can do as follows,
	
		CamelCase: Each word except the first will starts with capital letter
		
			myVariableName = 
			
		SnakeCase: (Having underscore between each words)
		
			my_Variable_Name = 
		
		PascalCase:
		
			Each case started with the capital letter
				
			MyVariableName = 
			
	
	unpacking a collection:
	
	if you have a collection of values in a  list or tuple and Python allows you to extract the values into variable.
	
	fruits = ["apple", "banana", "cherry"]
	x, y, z = fruits

	print(x)
	print(y)
	print(z)

	if you want to create a global variable inside a function, you can use global keyword.
	
		def myFunc()

			global x = 'jackson'
			
		myFunc()

		print(x)  # it will print the value as jackson.
		

Python Numbers:

	int  => Whole number even with negative value , Unlimitted length
	float => is a no, +ve or -ve with one or more decimal value.
	complex	=> numbers are written with a "j" as the imaginary part like 5j

Slicing:

	x = "Hello Dharma"

	print(x[2:4])  # 4 not included, it slice until 4,

	[startindex : endindex-1]


	if we leave the start index, it will consider from the first character.

	Eg: print(x[:3])
		
		Hel  # it slice until 2nd index from the start.
		
		
	if we leave the end index, it will consider all the way to the end.
	
	Eg:	print(x[2:])
	
		llo Dharma   
		
	-ve index: Use negative indexes to start the slice from the end of the string.
	Hello Dharma
	
	Eg: print(x[-5,-2]) 
	
		From: "D" in "Hello Dharma" (position -5)

		To, but not included: "d" in "World!" (position -2):
	
		Dhar
	

	strip() => method removed any whitespace from the beginning or the end:
	
	To add a space between them, add a " ":
	a = "Dharma"
	b = "Durai"
	c = a + " " +b
	
	
	
	
	
	

	if we leave the end index, range will go to the end.
	
	
Selenium Upload:

If you click any button which opens an new window and Selenium cannot recognize it , since its not an webelement.

So we need to examine whether there is any attribute like type='file' , if that was not there , we need to request the dev to add the attribute to the code.



if you want to go to parent tag in xpath , you can give /parent::tagname
Eg:

/parent::div

if you want to go to that parent tag again from there

/parent::div/parent::div